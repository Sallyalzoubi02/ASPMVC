@{
    Layout = "_AdminLayout";
}

<div class="geometric-shape shape-1"></div>
<div class="geometric-shape shape-2"></div>
<div class="geometric-shape shape-3"></div>

<div class="row mb-4">
    <div class="col-md-3">
        <div class="card stat-card">
            <i class="fas fa-users"></i>
            <div class="number" id="clients-count">@ViewBag.ClientsCount</div>
            <div class="label">العملاء</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card stat-card">
            <i class="fas fa-shopping-cart"></i>
            <div class="number" id="sales-count">@ViewBag.SalesCount</div>
            <div class="label">المبيعات</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card stat-card">
            <i class="fas fa-dollar-sign"></i>
            <div class="number" id="revenue-count">@string.Format("{0:C0}", ViewBag.Revenue)</div>
            <div class="label">الإيرادات</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card stat-card">
            <i class="fas fa-chart-pie"></i>
            <div class="number" id="growth-count">@ViewBag.GrowthPercentage%</div>
            <div class="label">النمو</div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-8">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">مخطط المبيعات</h5>
                <div class="chart-container">
                    <canvas id="sales-chart"></canvas>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">أحدث الطلبات</h5>
                <div class="list-group">
                    @foreach (var order in ViewBag.LatestOrders)
                    {
                        <a href="#" class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1">طلب #@order.Id</h6>
                                <small>@order.CreatedAt?.ToString("yyyy-MM-dd")</small>
                            </div>
                            <p class="mb-1">@order.OrderItems.Count منتجات</p>
                            <small>قيمة الطلب: @order.TotalAmount</small>
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">أفضل المنتجات</h5>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>المنتج</th>
                                <th>المبيعات</th>
                                <th>الإيراد</th>
                                <th>النسبة</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var product in ViewBag.TopProducts)
                            {
                                var percentage = (product.SalesCount * 100) / (ViewBag.SalesCount > 0 ? ViewBag.SalesCount : 1);
                                <tr>
                                    <td>@product.Product.Name</td>
                                    <td>@product.SalesCount</td>
                                    <td>@string.Format("{0:C0}", product.Revenue)</td>
                                    <td>
                                        <div class="progress">
                                            <div class="progress-bar" style="width: @percentage%"></div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">نشاط حديث</h5>
                <div class="activity-feed">
                    @if (ViewBag.LatestOrders.Count > 0)
                    {
                        <div class="feed-item d-flex mb-3">
                            <div class="flex-shrink-0">
                                <i class="fas fa-shopping-cart fa-2x text-success me-3"></i>
                            </div>
                            <div class="flex-grow-1">
                                <h6 class="mb-0">طلب جديد</h6>
                                <p class="mb-0 text-muted">تم تقديم طلب جديد #@ViewBag.LatestOrders[0].Id</p>
                                <small class="text-muted">@GetTimeAgo(ViewBag.LatestOrders[0].CreatedAt)</small>
                            </div>
                        </div>
                    }
                    @if (ViewBag.ClientsCount > 0)
                    {
                        <div class="feed-item d-flex mb-3">
                            <div class="flex-shrink-0">
                                <i class="fas fa-user-circle fa-2x text-success me-3"></i>
                            </div>
                            <div class="flex-grow-1">
                                <h6 class="mb-0">عميل جديد</h6>
                                <p class="mb-0 text-muted">تم تسجيل عميل جديد في النظام</p>
                                <small class="text-muted">اليوم</small>
                            </div>
                        </div>
                    }
                    <div class="feed-item d-flex mb-3">
                        <div class="flex-shrink-0">
                            <i class="fas fa-truck fa-2x text-success me-3"></i>
                        </div>
                        <div class="flex-grow-1">
                            <h6 class="mb-0">شحن الطلب</h6>
                            <p class="mb-0 text-muted">تم شحن @(ViewBag.SalesCount > 0 ? ViewBag.SalesCount : "عدة") طلبات</p>
                            <small class="text-muted">اليوم</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    public string GetTimeAgo(DateTime? date)
    {
        if (!date.HasValue) return "قبل فترة";

        var timeSpan = DateTime.Now - date.Value;

        if (timeSpan <= TimeSpan.FromSeconds(60))
            return $"منذ {timeSpan.Seconds} ثواني";

        if (timeSpan <= TimeSpan.FromMinutes(60))
            return $"منذ {timeSpan.Minutes} دقيقة";

        if (timeSpan <= TimeSpan.FromHours(24))
            return $"منذ {timeSpan.Hours} ساعة";

        if (timeSpan <= TimeSpan.FromDays(30))
            return $"منذ {timeSpan.Days} يوم";

        return date.Value.ToString("yyyy-MM-dd");
    }
}

@section Scripts {
    <script>
        // Counter animation
        function animateCounters() {
            const clientsCounter = document.getElementById('clients-count');
            const salesCounter = document.getElementById('sales-count');
            const revenueCounter = document.getElementById('revenue-count');
            const growthCounter = document.getElementById('growth-count');

            const clientsTarget = parseInt(clientsCounter.textContent) || 0;
            const salesTarget = parseInt(salesCounter.textContent) || 0;
            const revenueTarget = parseFloat(revenueCounter.textContent.replace(/[^0-9.]/g, '')) || 0;
            const growthTarget = parseInt(growthCounter.textContent) || 0;

            let clientsCount = 0;
            let salesCount = 0;
            let revenueCount = 0;
            let growthCount = 0;

            const interval = setInterval(() => {
                if (clientsCount < clientsTarget) {
                    clientsCount += Math.max(1, Math.ceil(clientsTarget / 50));
                    if (clientsCount > clientsTarget) clientsCount = clientsTarget;
                    clientsCounter.textContent = clientsCount;
                }

                if (salesCount < salesTarget) {
                    salesCount += Math.max(1, Math.ceil(salesTarget / 50));
                    if (salesCount > salesTarget) salesCount = salesTarget;
                    salesCounter.textContent = salesCount;
                }

                if (revenueCount < revenueTarget) {
                    revenueCount += Math.max(100, Math.ceil(revenueTarget / 50));
                    if (revenueCount > revenueTarget) revenueCount = revenueTarget;
                    revenueCounter.textContent = new Intl.NumberFormat('en-US', {
                        style: 'currency',
                        currency: 'USD',
                        maximumFractionDigits: 0
                    }).format(revenueCount);
                }

                if (growthCount < growthTarget) {
                    growthCount += 1;
                    if (growthCount > growthTarget) growthCount = growthTarget;
                    growthCounter.textContent = growthCount + '%';
                }

                if (clientsCount >= clientsTarget &&
                    salesCount >= salesTarget &&
                    revenueCount >= revenueTarget &&
                    growthCount >= growthTarget) {
                    clearInterval(interval);
                }
            }, 30);
        }

        // Sales chart
        function initSalesChart() {
            const ctx = document.getElementById('sales-chart').getContext('2d');
            const chart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'],
                    datasets: [{
                        label: 'المبيعات',
                        data: [
        @foreach (var month in ViewBag.MonthlySales)
        {
            @month.Sales

            <text>,</text>
        }
                        ],
                        backgroundColor: 'rgba(25, 135, 84, 0.2)',
                        borderColor: 'rgba(25, 135, 84, 1)',
                        borderWidth: 2,
                        tension: 0.4,
                        fill: true
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return 'المبيعات: ' + context.raw.toLocaleString();
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)'
                            },
                            ticks: {
                                callback: function(value) {
                                    return value.toLocaleString();
                                }
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });
        }

        // Initialize everything when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            animateCounters();
            initSalesChart();

            // Add hover effect to cards
            const cards = document.querySelectorAll('.card');
            cards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-5px)';
                    this.style.boxShadow = '0 10px 25px rgba(0, 0, 0, 0.1)';
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = '';
                    this.style.boxShadow = '';
                });
            });
        });
    </script>
}