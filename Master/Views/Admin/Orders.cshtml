@model IEnumerable<Master.Models.Order>

@{
    ViewData["Title"] = "الطلبات";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0 text-success">
            <i class="fas fa-shopping-cart me-2"></i>@ViewData["Title"]
        </h2>
    </div>

    <!-- فلترة الجدول -->
    <div class="card mb-4 shadow-sm">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-3">
                    <label for="statusFilter" class="form-label">حالة الطلب:</label>
                    <select id="statusFilter" class="form-select">
                        <option value="all">الكل</option>
                        <option value="جاري المعالجة">جاري المعالجة</option>
                        <option value="تم الشحن">تم الشحن</option>
                        <option value="تم التوصيل">تم التوصيل</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="typeFilter" class="form-label">حالة الدفع:</label>
                    <select id="typeFilter" class="form-select">
                        <option value="all">الكل</option>
                        <option value="تم الدفع">تم الدفع</option>
                        <option value="بانتظار الدفع">بانتظار الدفع</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="dateSort" class="form-label">ترتيب حسب:</label>
                    <select id="dateSort" class="form-select">
                        <option value="newest">الأحدث أولاً</option>
                        <option value="oldest">الأقدم أولاً</option>
                    </select>
                </div>
                <div class="col-md-3 d-flex align-items-end">
                    <button id="resetFilters" class="btn btn-outline-secondary w-100">
                        <i class="fas fa-undo me-2"></i>إعادة تعيين
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-success">
                        <tr>
                            <th>رقم الطلب</th>
                            <th>حالة الطلب</th>
                            <th>المبلغ</th>
                            <th>تاريخ الطلب</th>
                            <th>حالة الدفع</th>
                            <th>العميل</th>
                            <th>الإجراءات</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>#@item.Id</td>
                                <td>
                                    @if (@item.OrderStatus != "تم التوصيل")
                                    {
                                        <form id="statusForm-@item.Id" asp-action="UpdateOrderStatus" method="post">
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <select name="OrderStatus" class="form-select form-select-sm" onchange="this.form.submit()">
                                                <option value="جاري المعالجة" selected="@(item.OrderStatus == "جاري المعالجة")">جاري المعالجة</option>
                                                <option value="تم الشحن" selected="@(item.OrderStatus == "تم الشحن")">تم الشحن</option>
                                                <option value="تم التوصيل" selected="@(item.OrderStatus == "تم التوصيل")">تم التوصيل</option>
                                            </select>
                                        </form>
                                    }
                                    else
                                    {
                                        <span class="badge @GetStatusBadgeClass(item.OrderStatus)">
                                            @item.OrderStatus
                                        </span>
                                    }
                                </td>
                                
                                <td>@item.TotalAmount.ToString("0.00") JD</td>
                                <td>@item.CreatedAt</td>
                                <td>
                                    @if (item.Payment?.Status == "بانتظار الدفع")
                                    {
                                        <form id="statusForm-@item.Id" asp-action="UpdateStatus" method="post">
                                            <input type="hidden" name="id" value="@item.Id" />
                                            <select name="PaymentStatus" class="form-select form-select-sm"
                                                    onchange="this.form.submit()">
                                                <option selected value="بانتظار الدفع">بانتظار الدفع</option>
                                                <option value="تم الدفع">تم الدفع</option>
                                            </select>
                                        </form>
                                    }
                                    else
                                    {
                                        <span class="badge bg-success">@item.Payment?.Status</span>
                                    }
                                </td>
                                <td>@item.User?.Name</td>
                                <td>
                                    <button class="btn btn-sm btn-outline-success"
                                            data-bs-toggle="modal"
                                            data-bs-target="#orderModal-@item.Id">
                                        <i class="fas fa-eye"></i> التفاصيل
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Modal لعرض تفاصيل الطلب -->
@foreach (var item in Model)
{
    <div class="modal fade" id="orderModal-@item.Id" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title">تفاصيل الطلب #@item.Id</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h6><i class="fas fa-user me-2"></i> معلومات العميل</h6>
                            <p><strong>الاسم:</strong> @item.User?.Name</p>
                            <p><strong>الهاتف:</strong> @item.Phone</p>
                        </div>
                        <div class="col-md-6">
                            <h6><i class="fas fa-map-marker-alt me-2"></i> معلومات الشحن</h6>
                            <p><strong>العنوان:</strong> @item.Address1</p>
                            <p><strong>العنوان الثانوي:</strong> @(item.Address2 ?? "غير متوفر")</p>
                            <p><strong>موعد التوصيل:</strong> @(item.DeliveryTime.ToString("yyyy-MM-dd") ?? "غير محدد")</p>
                        </div>
                    </div>

                    <h6><i class="fas fa-boxes me-2"></i> المنتجات</h6>
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>الصورة</th>
                                    <th>المنتج</th>
                                    <th>الكمية</th>
                                    <th>السعر</th>
                                    <th>المجموع</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var orderItem in item.OrderItems)
                                {
                                    <tr>
                                        <td>
                                            @if (!string.IsNullOrEmpty(orderItem.Product?.ImageUrl))
                                            {
                                                <img src="~/@orderItem.Product.ImageUrl" width="50" height="50" class="img-thumbnail">
                                            }
                                            else
                                            {
                                                <div class="no-image">لا يوجد صورة</div>
                                            }
                                        </td>
                                        <td>@orderItem.Product?.Name</td>
                                        <td>@orderItem.Quantity</td>
                                        <td>@orderItem.Price.ToString("0.00") JD</td>
                                        <td>@((orderItem.Quantity * orderItem.Price).ToString("0.00")) JD</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="row mt-4">
                        <div class="col-md-6">
                            <h6><i class="fas fa-info-circle me-2"></i> معلومات إضافية</h6>
                            <p>
                                <strong>حالة الطلب:</strong> <span class="badge @GetStatusBadgeClass(item.OrderStatus)">
                                    @item.OrderStatus
                                </span>
                            </p>
                            <p>
                                <strong>حالة الدفع:</strong> <span class="badge @(item.Payment?.Status == "تم الدفع" ? "bg-success" : "bg-warning")">
                                    @item.Payment?.Status
                                </span>
                            </p>
                        </div>
                        <div class="col-md-6 text-end">
                            <h5>الإجمالي: <span class="text-success">@item.TotalAmount.ToString("0.00") JD</span></h5>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">إغلاق</button>
                    <button type="button" class="btn btn-success" onclick="printInvoice('orderModal-@item.Id')">طباعة الفاتورة</button>
                </div>
            </div>
        </div>
    </div>
}

@functions {
    string GetStatusBadgeClass(string status)
    {
        switch (status)
        {
            case "تم التوصيل": return "bg-success";
            case "جاري المعالجة": return "bg-primary";
            case "تم الشحن": return "bg-warning";
            case "لم يتم التوصيل": return "bg-danger";
            default: return "bg-secondary";
        }
    }
}

@section Styles {
    <style>
        .no-image {
            width: 50px;
            height: 50px;
            background: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.8rem;
            color: #6c757d;
            border: 1px solid #dee2e6;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            createAnimatedCircles();
        });

                function printInvoice(modalId) {
            var modal = document.getElementById(modalId);
            var originalContents = document.body.innerHTML;
            var printContents = modal.querySelector('.modal-content').innerHTML;

            document.body.innerHTML = printContents;
            window.print();
            document.body.innerHTML = originalContents;
            location.reload();
        }
    </script>

    <script>
        $(document).ready(function() {
            // فلترة الجدول حسب حالة الطلب
            $('#statusFilter').change(applyFilters);

            // فلترة الجدول حسب حالة الدفع
            $('#typeFilter').change(applyFilters);

            // ترتيب الجدول حسب التاريخ
            $('#dateSort').change(applySorting);

            // إعادة تعيين الفلاتر
            $('#resetFilters').click(resetFilters);

            // دالة الفلترة المحدثة
            function applyFilters() {
                const status = $('#statusFilter').val();
                const paymentStatus = $('#typeFilter').val();

                $('table tbody tr').each(function() {
                    const row = $(this);

                    // تحديد حالة الطلب (العمود الثاني)
                    let orderStatus = '';
                    const statusSelect = row.find('select[name="OrderStatus"]');
                    const statusBadge = row.find('td:nth-child(2) .badge');

                    if (statusSelect.length > 0) {
                        orderStatus = statusSelect.find('option:selected').text();
                    } else if (statusBadge.length > 0) {
                        orderStatus = statusBadge.text().trim();
                    }

                    // تحديد حالة الدفع (العمود الخامس)
                    let paymentStatusText = '';
                    const paymentSelect = row.find('select[name="PaymentStatus"]');
                    const paymentBadge = row.find('td:nth-child(5) .badge');

                    if (paymentSelect.length > 0) {
                        paymentStatusText = paymentSelect.find('option:selected').text();
                    } else if (paymentBadge.length > 0) {
                        paymentStatusText = paymentBadge.text().trim();
                    }

                    // تطبيق الفلاتر
                    const statusMatch = (status === 'all') || (orderStatus === status);
                    const paymentMatch = (paymentStatus === 'all') || (paymentStatusText === paymentStatus);

                    if (statusMatch && paymentMatch) {
                        row.show();
                    } else {
                        row.hide();
                    }
                });
            }

            // دالة إعادة التعيين
            function resetFilters() {
                $('#statusFilter').val('all');
                $('#typeFilter').val('all');
                $('#dateSort').val('newest');
                $('table tbody tr').show();
            }

            // دالة الترتيب حسب التاريخ
            function applySorting() {
                const order = $('#dateSort').val();
                const table = $('table');
                const tbody = table.find('tbody');
                const rows = tbody.find('tr').get();

                rows.sort(function(a, b) {
                    const dateTextA = $(a).find('td:nth-child(4)').text().trim();
                    const dateTextB = $(b).find('td:nth-child(4)').text().trim();

                    const dateA = new Date(dateTextA);
                    const dateB = new Date(dateTextB);

                    return order === 'newest' ? dateB - dateA : dateA - dateB;
                });

                $.each(rows, function(index, row) {
                    tbody.append(row);
                });
            }
        });
    </script>
}



